{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 11:52:25.107088. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "import agate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 11:52:45.025049. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "results = agate.Table.from_csv(\"arrest.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| column         | data_type |\n",
      "| -------------- | --------- |\n",
      "| LName          | Text      |\n",
      "| FName          | Text      |\n",
      "| MName          | Text      |\n",
      "| Age            | Number    |\n",
      "| DateArr        | Date      |\n",
      "| Charge         | Text      |\n",
      "| Charge Descrip | Text      |\n",
      "| Address        | Text      |\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 11:57:57.715274. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "print results\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:00:43.567186. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "by_charge = results.group_by('Charge Descrip')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:03:36.824708. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "age_avg = by_charge.aggregate([('avg_age',agate.Mean('Age'))])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "| Charge Descrip       | avg_age |\n",
      "| -------------------- | ------- |\n",
      "| MOTEL/RESTAURANT/... | 65.000… |\n",
      "| PROTECTIVE ORDER:... | 60.000… |\n",
      "| PROTECTIVE ORDER:... | 60.000… |\n",
      "| DWI: 1ST OFF, BAC... | 57.500… |\n",
      "| FIREARM: POSSESS ... | 57.000… |\n",
      "| ENTER A SCHOOL AF... | 55.000… |\n",
      "| EMERGENCY SERVICE... | 54.500… |\n",
      "| AGGRESSIVE DR: VI... | 53.000… |\n",
      "| MALIC SHOOT OR TH... | 52.000… |\n",
      "| DRUGS: MANUFACTUR... | 51.000… |\n",
      "| ALCH BEV TEND/DRK... | 50.000… |\n",
      "| PHONE: ANNOYING R... | 49.000… |\n",
      "| ABDUCTION: BY PAR... | 49.000… |\n",
      "| DOG: FAIL TO CONT... | 49.000… |\n",
      "| UNVACCINATED DOG ... | 48.167… |\n",
      "| MONEY LAUNDERING:... | 48.000… |\n",
      "| ACCIDENT: DRIVER ... | 48.000… |\n",
      "| BAD CHECK: LARCEN... | 47.000… |\n",
      "| EMERG VEH: NOT AP... | 47.000… |\n",
      "| DRIVING AFTER FOR... | 46.000… |\n",
      "| ...                  |     ... |\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:04:21.762163. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "age_avg.order_by('avg_age', reverse=True).print_table()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:11:20.440278. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "alex=results.where(lambda r:r['Address'] == 'Alexandria')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:11:30.700424. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "import re\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py:207: DeprecationWarning: Interpreting naive datetime as local 2017-02-28 12:12:05.453237. Please add timezone info to timestamps.\n"
     ]
    }
   ],
   "source": [
    "alex=results.where(lambda row:re.match('ALEX',row['Address']))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
